buildscript {
	ext {
		queryDslVersion = '5.0.0'
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
}

group = 'louie.hanse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'

	// AMQP(RabbitMQ)
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Testcontainers
	implementation 'org.testcontainers:rabbitmq:1.17.2'

	// Dev
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured'

	// S3Mock
	implementation 'io.findify:s3mock_2.13:0.2.6'

	// API Docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	// Jwt
	implementation 'com.auth0:java-jwt:3.19.1'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	// AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Scheduler
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	// Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// WebSocket Client
	implementation 'org.webjars.bower:bootstrap:4.3.1'
	implementation 'org.webjars.bower:vue:2.5.16'
	implementation 'org.webjars.bower:axios:0.17.1'
	implementation 'com.google.code.gson:gson:2.8.0'
	implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'

	// Log
	implementation 'org.codehaus.janino:janino:3.1.6'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	configurations 'asciidoctorExtensions'

	sources{
		include('**/index.adoc')
	}

	baseDirFollowsSourceFile()

}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file('build/docs/asciidoc')
	into file('src/main/resources/static/docs')
}

build {
	dependsOn copyDocument
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'
	}
}

jar {
	enabled = false
}

bootJar {
	archivesBaseName = 'app'
	archiveFileName = 'app.jar'
	archiveVersion = '0.0.0'
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
