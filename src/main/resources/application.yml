spring:
  profiles:
    active: ${SHARE_PLATE_PROFILE}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

  kafka:
    bootstrap-servers: localhost:9092

    consumer:
      group-id: consumer-group-1
#      auto-offset-reset: earliest

      # 데이터를 받아올 때, key/value를 역직렬화
      # JSON 데이터를 받아올 것이라면 JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:

      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  jpa:
    properties:
      hibernate:
        format_sql: true
        show_sql: false
        default_batch_fetch_size: 100
    open-in-view: false

  config:
    import: classpath:oauth.yml,classpath:s3.yml

logging.level:
  org:
    hibernate.SQL: debug
  com:
    amazonaws:
      util:
        EC2MetadataUtils: error
